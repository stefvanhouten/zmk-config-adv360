#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <210>;
        quick-tap-ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    bhm: balanced_homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;    // <---[[moderate duration]]
        quick-tap-ms = <125>;
        global-quick-tap;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
                &bhm LCTRL A &bhm LGUI S &bhm LALT D &bhm LSHIFT F
            >;
        };
    };




    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4    &kp N5             &tog 0     &tog 0     &kp N6     &kp N7     &kp N8     &kp N9     &kp N0  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp F      &kp P     &kp B              &mo 3      &mo 3      &kp J      &kp L      &kp U      &kp Y   &kp SEMI   &kp BSLH
   &kp ESC      &hm LALT A     &hm LGUI R     &hm LCTRL S      &hm LSHIFT T     &kp G              &none  &kp LCTRL   &kp LALT                         &kp LGUI  &kp RCTRL      &none   &kp M   &hm LSHIFT N      &hm LCTRL E    &hm LGUI I     &hm LALT O  &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp D     &kp V              &none      &none   &kp HOME      &none      &none  &kp PG_UP      &none      &none   &kp K   &kp H  &kp COMMA  &kp DOT  &kp FSLH    &trans
     &mo 1  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT  &kp BSPC            &kp DEL    &kp END  &kp PG_DN  &kp ENTER  &kp SPACE     &kp UP   &kp DOWN     &trans  &trans   &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1    &kp F2     &kp F3              &kp F4               &kp F5  &kp F6            &trans  &trans        &kp F7             &kp F8             &kp F9          &kp F10  &kp F11  &kp F12
 &trans    &trans     &trans              &trans               &trans  &trans             &none   &none         &none   &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp UNDER   &trans   &trans
 &trans  &kp PLUS  &kp MINUS       &kp LESS_THAN     &kp GREATER_THAN  &trans             &none  &trans        &trans                                             &kp C_MUTE   &trans    &none  &macro_arrow  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &trans  &trans
 &trans    &trans     &trans            &kp HOME              &kp END  &trans             &none   &none        &trans              &none              &none  &kp C_VOLUME_UP    &none    &none         &none        &kp LEFT_BRACE        &kp RIGHT_BRACE     &trans  &trans  &trans
 &trans    &trans     &trans  &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &trans            &trans  &trans  &kp C_VOL_DN  &kp LC(LS(ENTER))             &trans           &trans   &trans   &trans        &trans                &trans
            >;
        };

        layer_Shortcuts {
            bindings = <
 &trans                  &trans              &trans                 &trans                  &trans               &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &macro_code_inspection  &macro_find_usages         &macro_actions        &macro_bookmarks  &macro_add_bookmark            &trans  &trans   &none   &none   &none  &trans  &trans  &trans
 &trans   &macro_open_navigator  &macro_prev_window   &macro_prev_splitter    &macro_next_splitter   &macro_next_window            &trans  &trans  &trans                  &trans  &trans  &trans   &none  &kp F12   &none  &trans  &trans  &trans
 &trans      &macro_split_right   &kp LC(LS(COMMA))  &kp LC(LA(BACKSLASH))  &macro_recent_location  &macro_tooltip_func            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &none    &none   &none  &trans  &trans  &trans
 &trans                  &trans              &trans                  &none   &macro_file_structure               &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
 &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &to 0  &to 0  &trans  &trans  &trans  &trans  &trans  &trans
 &trans        &trans        &trans        &trans        &trans        &trans            &bootloader  &bootloader  &trans  &trans  &trans  &trans  &trans  &trans
 &trans        &trans        &trans        &trans        &trans        &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans        &trans        &trans        &trans        &trans        &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans        &trans        &trans    &bl BL_INC    &bl BL_DEC    &bt BT_CLR            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};